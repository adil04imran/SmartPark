rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to all collections
    match /{document=**} {
      allow read: if true;
    }
    
    // Slots collection
    match /slots/{slotId} {
      // Only allow updates to status and updatedAt fields
      allow update: if request.auth != null &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']);
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      // Allow users to create their own bookings
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
      
      // Users can read their own bookings
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true);
      
      // Only allow updates to status field by admins
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']);
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Users can create/update their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
